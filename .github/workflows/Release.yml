name: Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.target }}
      - name: Build wheels - manylinux
        uses: messense/maturin-action@main
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --no-sdist --release -o dist --strip --cargo-extra-args="--no-default-features --features rustls-tls"
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}-bin
          path: target/${{ matrix.target }}/release/aliyundrive-fuse
          if-no-files-found: error
      - name: Get tag
        if: "startsWith(github.ref, 'refs/tags/')"
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Archive binary
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf aliyundrive-fuse-${{ steps.tag.outputs.tag }}.${{ matrix.target }}.tar.gz aliyundrive-fuse
          shasum -a 256 aliyundrive-fuse-${{ steps.tag.outputs.tag }}.${{ matrix.target }}.tar.gz > aliyundrive-fuse-${{ steps.tag.outputs.tag }}.${{ matrix.target }}.tar.gz.sha256
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/aliyundrive-fuse*.tar.gz*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}

  release:
    name: Release
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: https://pypi.org/project/aliyundrive-fuse/
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [ linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
